apply plugin: 'java'
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
version = "1.0"
group= "eu.beezig.laby" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "BeezigLaby"

configurations {
    embed
}


compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    options.encoding = 'UTF-8'
}


reobf {
    jar {
        useNotchSrg()
    }
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java'
            srcDirs 'Beezig/src'
            srcDirs 'BeezigForge/src/main/java'
            srcDirs 'Beezig/hive-api-wrapper/src/main/java'

        }

        resources {
            srcDirs 'src/main/resources'
            srcDirs 'BeezigForge/src/main/resources'
            srcDirs 'Beezig/src/core/messages'
            srcDirs 'Beezig/src/lang'
            srcDirs 'Beezig/src/libraries'
            srcDirs 'Beezig/src/javazoom/jl/decoder'
            exclude '**/*.java'
            exclude '**/*.dll'
            exclude '**/*.dylib'
            exclude '**/*.so'
            exclude '**/*.jnilib'
        }
    }

}

minecraft {
    version = "1.8.9-11.15.1.1722"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_20"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile group: 'net.java.dev.jna', name: 'jna', version: '4.5.0'
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'

    embed group: 'com.kohlschutter.junixsocket', name: 'junixsocket-native-common', version: '2.0.4'
}

processResources
        {

            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
                exclude '**/*.java'
                exclude '**/*.dll'
                exclude '**/*.dylib'
                exclude '**/*.so'
                exclude '**/*.jnilib'
            }

            from {
                configurations.embed.collect {
                    zipTree(it).matching {
                        include '**/*.dylib'
                        include '**/*.jnilib'
                        include '**/*.so'
                    }.files
                }
            }



        }
